{"version":3,"sources":["lang/en.ts","lang/np.ts","lang/index.ts","stocks.tsx","config.ts","form/BonusForm.tsx","form/PLForm.tsx","form/BonusPriceAdjustment.tsx","form/RightSharePriceAdjustment.tsx","form/GForm.tsx","form/EMI.tsx","form/IncomeTax.tsx","form/MarginLending.tsx","form/CompanyDetail.tsx","form/StockList.tsx","LangSwitcher.tsx","Network.ts","App.tsx","index.tsx"],"names":["en","SELECT_SHARE_CALCUALTOR","INDIVIDUAL_SHARE_CALCULATOR","EQUITY_BONUS_SHARE_CALCULATOR","BONUS_SHARE_PRICE_ADJUSTMENT_CALCULATOR","RIGHT_SHARE_PRICE_ADJUSTMENT_CALCULATOR","DETAILS","PRICE","BROKER_COMMISSION","SEBON_FEE","DEMAT_FEE","CAPITAL_GAIN_TAX","TOTAL_RECEIVABLE","TOTAL_PAYABLE","PROFIT","LOSS","WHAT_BUSINESS_DOING","BUY_SHARE","SELL_SHARE","WHAT_SHARE_QTY_SELL","WHAT_SHARE_QTY_BUY","ENTER_TEXT","BUY_PRICE","SELL_PRICE","SHARE_COUNT","BONUS_SHARE","RIGHT_SHARE","BONUS_CASH","SELECT_STOCK","LTP_BEFORE_BCD","GRAHAM_CALCULATOR","PRICE_TO_EARNING_RATIO","PRICE_TO_BOOK_RATIO","EPS","BPVS","MARKET_PRICE","EMI_CALCULATOR","PRINCIPAL_AMOUNT","INTEREST_RATE","PERIOD","TOTAL_INTEREST","TOTAL_PAYMENT","EMI","INCOME_TAX","MONTHLY_TAX","YEARLY_TAX","TAX_LIABILITY","MARITAL_STATUS","INDIVIDUAL","MARRIED","MONTHLY_INCOME","MARGIN_LENDING","MARGIN_AMOUNT","MARGIN_PERCENT","AVG_MKT_PRICE","MARGIN_SHARE_COUNT","COMPANY_DETAILS","NAME","SYMBOL","BOOK_VALUE","OUTSTANDING_SHARES","MARKET_CAPITALIZATION","RSI","MA","LAST_UPDATED","HOLDING_PERIOD","HOLDING_SHORT","HOLDING_LONG","STOCK_LIST","TABLE_BODY_NOMATCH","TABLE_BODY_TOOLTIP","TABLE_BODY_SORT_FOR","TABLE_PAGINATION_NEXT","TABLE_PAGINATION_PREV","TABLE_PAGINATION_PER_PAGE","TABLE_PAGINATION_OF","TABLE_TOOLBAR_SEARCH","TABLE_TOOLBAR_DOWNLOAD_CV","TABLE_TOOLBAR_PRINT","TABLE_TOOLBAR_VIEW_COLUMNS","TABLE_TOOLBAR_FILTER_TABLE","TABLE_FILTER_ALL","TABLE_FILTER_TITLE","TABLE_FILTER_RESET","TABLE_VIEW_COLUMNS","TABLE_VIEW_SH_TITLE","TABLE_SELECTED_ROWS_TEXT","TABLE_SELECTED_ROWS_DELETE","TABLE_SELECTED_ROWS_DELETE_ARIA","LTP","PBV","PE","LOW_52","HIGH_52","SECTOR_NAME","np","VOLUME","__","name","type","_ENL","ENL","_NPL","NPL","StockDropdown","data","onAfterSelect","lang","useState","StockList","stocks","setStocks","useEffect","Autocomplete","onChange","event","newValue","id","options","getOptionLabel","option","symbol","style","width","renderInput","params","TextField","label","variant","size","config","api_url","bonus_cash_tax","broker_commission","low","high","value","sebon_fee","demat_fee","price_to_book","token","tax_rates","I","tax","M","useStyles","makeStyles","root","margin","BonusCashForm","classes","stock_name","share_count","bonus_dividend_per","cash_dividend_per","total_dividend","bonus_cash","bonus_share","request","setRequest","bonusTax","setBonusTax","handleChange","trim","parseFloat","_calculateBonusShare","preRequest","className","noValidate","autoComplete","Paper","padding","companyName","bonusShare","toFixed","bonusCashValue","stockName","preState","placeholder","e","target","Typography","color","component","fontSize","getNumberFormat","displayType","thousandSeparator","prefix","rowX","flexDirection","alignItems","justifyContent","backgroundColor","lblLeft","fontWeight","PLForm","share_action","buy_price","sell_price","amount","total_amount","net_profit","capital_gain_tax","holding_period","requestObj","setRequestObj","appData","setAppData","amount_2","getBrokerCommission","getSebonFee","getDematFee","payAmt_1","_calculate","getFormatQty","getFormatAmount","getFormatAmountX","getValueColorX","marginTop","Grid","container","direction","item","xs","getAmount","getFormatPayAmount","getValueColorByAction","getValueColor","FormControl","FormLabel","RadioGroup","FormControlLabel","control","Radio","getMaxValue","values","push","Math","max","broker_commissions","bcValue","forEach","v","i","lastElement","length","getNumberFormatWPrefix","BonusPriceAdjustment","bonus","ltp","market_price","formatValue","autoFocus","RightSharePriceAdjustment","GForm","pricetoearning","pricetobook","eps","bvps","fair_value","diff_price","sqrt","showDiv","getValue","pe","book_value","getDiffValue","principal","interest","period","monthly_payment","total_payment","total_interest","periods","x","pow","IncomeTax","monthly_income","marital_status","monthly_tax","yearly_income","taxes","yearly_tax","firstItem","y","n","addTax","MarginLendingForm","margin_percent","margin_amount","ma180_price","_getMarginAmount","stockSymbol","selectedStock","find","s","avgPrice","ma_180","getSLabel","table","minWidth","CompanyDetail","stock","Table","TableBody","TableRow","TableCell","scope","outstanding_shares","market_capitalization","rsi","map","r","last_updated","theme","getColumns","extraCols","c","filter","sort","customBodyRender","tableMeta","updateValue","extraCol","setExtraCols","columns","setColumns","rowsPerPageOptions","download","print","responsive","filterType","selectableRows","draggableColumns","enabled","textLabels","body","noMatch","toolTip","columnHeaderTooltip","column","pagination","next","previous","rowsPerPage","displayRows","toolbar","search","downloadCsv","viewColumns","filterTable","all","title","reset","titleAria","selectedRows","text","delete","deleteAria","ThemeProvider","createTheme","components","MUIDataTableBodyCell","styleOverrides","MUIDataTableHeadCell","dragCursor","SwitchesSize","onSwitchLang","React","checked","setChecked","FormGroup","Switch","prev","marginLeft","App","setOption","setNp","setData","visibleOptions","setVisibleOption","endpoint","onAfterFetch","formData","FormData","append","fetch","method","headers","Authorization","then","res","json","result","error","fetchApi","ref","resp","visible_options","a","display","InputLabel","htmlFor","NativeSelect","parseInt","o","includes","position","right","bottom","Link","rel","href","underline","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.4a734b72.chunk.js","sourcesContent":["const en = {\n  SELECT_SHARE_CALCUALTOR: 'Select Share Calculator',\n  INDIVIDUAL_SHARE_CALCULATOR: 'Buy / Sell Share',\n  EQUITY_BONUS_SHARE_CALCULATOR: 'Bonus Share / Cash Dividend',\n  BONUS_SHARE_PRICE_ADJUSTMENT_CALCULATOR: 'Bonus Share Price Adjustment',\n  RIGHT_SHARE_PRICE_ADJUSTMENT_CALCULATOR: 'Right Share Price Adjustment',\n  DETAILS: 'Details',\n  PRICE: 'Amount',\n  BROKER_COMMISSION: 'Broker Commission',\n  SEBON_FEE: 'Sebon Fee',\n  DEMAT_FEE: 'Demat Fee',\n  CAPITAL_GAIN_TAX: 'Capital Gain Tax',\n  TOTAL_RECEIVABLE: 'Total Receivable',\n  TOTAL_PAYABLE: 'Total Payable',\n  PROFIT: 'Profit',\n  LOSS: 'Loss',\n  WHAT_BUSINESS_DOING: 'Transaction Type',\n  BUY_SHARE: 'Buy Share',\n  SELL_SHARE: 'Sell Share',\n  WHAT_SHARE_QTY_SELL: 'Sell Quantity',\n  WHAT_SHARE_QTY_BUY: 'Buy Quantity',\n  ENTER_TEXT: 'Type Here..',\n  BUY_PRICE: 'Buy Price',\n  SELL_PRICE: 'Sell Price',\n  SHARE_COUNT: 'Share Quantity',\n  BONUS_SHARE: '(%) Bonus Share',\n  RIGHT_SHARE: '(%) Right Share',\n  BONUS_CASH: '(%) Cash Dividend',\n  SELECT_STOCK: 'Select Stock',\n  LTP_BEFORE_BCD: 'LTP Before Book Close Date',\n  GRAHAM_CALCULATOR: 'Stock Fair Value by Graham Number',\n  PRICE_TO_EARNING_RATIO: 'P/E (Price to Earning) Ratio',\n  PRICE_TO_BOOK_RATIO: 'Price to Book Ratio',\n  EPS: 'EPS (Earning Per Share)',\n  BPVS: 'Book Value Per Share',\n  MARKET_PRICE: 'Market Price',\n  EMI_CALCULATOR: 'EMI',\n  PRINCIPAL_AMOUNT: 'Loan Amount',\n  INTEREST_RATE: 'Interest Rate (%)',\n  PERIOD: 'Period (Years)',\n  TOTAL_INTEREST: 'Total Interest',\n  TOTAL_PAYMENT: 'Total Payment',\n  EMI: 'EMI',\n  INCOME_TAX: 'Income Tax',\n  MONTHLY_TAX: 'Monthly',\n  YEARLY_TAX: 'Yearly',\n  TAX_LIABILITY: 'Tax Liability',\n  MARITAL_STATUS: 'Marital Status',\n  INDIVIDUAL: 'Single',\n  MARRIED: 'Married',\n  MONTHLY_INCOME: 'Monthly Income',\n  MARGIN_LENDING: 'Margin Lending',\n  MARGIN_AMOUNT: 'Margin Amount',\n  MARGIN_PERCENT: 'Margin Percent',\n  AVG_MKT_PRICE: '180 Days Average Market Price',\n  MARGIN_SHARE_COUNT: 'Share Units',\n  COMPANY_DETAILS: 'Stock Details',\n  NAME: 'Name',\n  SYMBOL: 'Symbol',\n  BOOK_VALUE: 'Book value',\n  OUTSTANDING_SHARES: 'Outstanding Shares',\n  MARKET_CAPITALIZATION: 'Market Capitalization',\n  RSI: 'RSI(14)',\n  MA: 'Average Price (180 days)',\n  LAST_UPDATED: 'Last Updated',\n  HOLDING_PERIOD: 'Holding Period',\n  HOLDING_SHORT: 'Short Term (CGT: 7.5%)',\n  HOLDING_LONG: 'Long Term (CGT: 5%)',\n  STOCK_LIST: 'Stock List',\n  TABLE_BODY_NOMATCH: 'Sorry, no matching records found',\n  TABLE_BODY_TOOLTIP: 'Sort',\n  TABLE_BODY_SORT_FOR: 'Sort for',\n  TABLE_PAGINATION_NEXT: 'Next Page',\n  TABLE_PAGINATION_PREV: 'Previous Page',\n  TABLE_PAGINATION_PER_PAGE: 'Rows per page:',\n  TABLE_PAGINATION_OF: 'of',\n  TABLE_TOOLBAR_SEARCH: 'Search',\n  TABLE_TOOLBAR_DOWNLOAD_CV: 'downloadCsv',\n  TABLE_TOOLBAR_PRINT: 'Print',\n  TABLE_TOOLBAR_VIEW_COLUMNS: 'View Columns',\n  TABLE_TOOLBAR_FILTER_TABLE: 'Filter Table',\n  TABLE_FILTER_ALL: 'All',\n  TABLE_FILTER_TITLE: 'FILTERS',\n  TABLE_FILTER_RESET: 'RESET',\n  TABLE_VIEW_COLUMNS: 'Show Columns',\n  TABLE_VIEW_SH_TITLE: 'Show/Hide Table Columns',\n  TABLE_SELECTED_ROWS_TEXT: 'row(s) selected',\n  TABLE_SELECTED_ROWS_DELETE: 'Delete',\n  TABLE_SELECTED_ROWS_DELETE_ARIA: 'Delete Selected Rows',\n  LTP: 'LTP',\n  PBV: 'PBV',\n  PE: 'PE',\n  LOW_52: '52 Weeks Low',\n  HIGH_52: '52 Weeks High',\n  SECTOR_NAME: 'Sector',\n};\n\nexport default en;\n","const np = {\n  SELECT_SHARE_CALCUALTOR: 'सेयर क्यालकुलेटर चयन गर्नुहोस्',\n  INDIVIDUAL_SHARE_CALCULATOR: 'व्यक्तिगत सेयर खरिद बिक्री',\n  EQUITY_BONUS_SHARE_CALCULATOR: 'इक्विटी बोनस सेयर/क्यास',\n  BONUS_SHARE_PRICE_ADJUSTMENT_CALCULATOR: 'बोनस सेयर मूल्य समायोजन',\n  RIGHT_SHARE_PRICE_ADJUSTMENT_CALCULATOR: 'राईट सेयर मूल्य समायोजन',\n  DETAILS: 'विवरण',\n  PRICE: 'मुल्य',\n  BROKER_COMMISSION: 'ब्रोकर कमीशन',\n  SEBON_FEE: 'सेबन फीस',\n  DEMAT_FEE: 'डीमैट शुल्क',\n  CAPITAL_GAIN_TAX: 'पूंजी लाभ कर',\n  TOTAL_RECEIVABLE: 'कुल प्राप्त',\n  TOTAL_PAYABLE: 'कुल देय',\n  PROFIT: 'नाफा',\n  LOSS: 'घाटा',\n  WHAT_BUSINESS_DOING: 'के कारोबर गर्दै हुनुहुन्छ',\n  BUY_SHARE: 'सेयर खरिद',\n  SELL_SHARE: 'सेयर बिक्री',\n  WHAT_SHARE_QTY_SELL: 'कती किता सेयर बिक्री गर्दै हुनुहुन्छ?',\n  WHAT_SHARE_QTY_BUY: 'कती किता सेयर खरिद गर्दै हुनुहुन्छ?',\n  ENTER_TEXT: 'यहाँ राख्नु होश',\n  BUY_PRICE: 'खरिद मुल्य',\n  SELL_PRICE: 'बिक्री मुल्य',\n  SHARE_COUNT: 'तपाईं सँग कती कित्ता सेयर छ',\n  BONUS_SHARE: 'कम्पनीले कती प्रतिसत बोनस सेयर दिदै छ(%)',\n  RIGHT_SHARE: 'कम्पनीले कती प्रतिसत राईट सेयर दिदै छ(%)',\n  BONUS_CASH: 'कम्पनीले कती प्रतिसत बोनस क्यास दिदै छ(%)',\n  SELECT_STOCK: 'स्टक चयन गर्नुहोस्',\n  LTP_BEFORE_BCD: 'बुक क्लोज डेट अगाडिको बजार मुल्य (LTP)',\n  GRAHAM_CALCULATOR: 'निष्पक्ष सेयर मूल्य',\n  PRICE_TO_EARNING_RATIO: 'पि/ई अनुपात',\n  PRICE_TO_BOOK_RATIO: 'Price to Book Ratio',\n  EPS: 'ईपिएस',\n  BPVS: 'बुक भ्यालु',\n  MARKET_PRICE: 'बजार मूल्य',\n  EMI_CALCULATOR: 'ईएमआई',\n  PRINCIPAL_AMOUNT: 'ऋण रकम',\n  INTEREST_RATE: 'ब्याज दर (%)',\n  PERIOD: 'अवधि (साल)',\n  TOTAL_INTEREST: 'कुल ब्याज',\n  TOTAL_PAYMENT: 'कुल भुक्तानी',\n  EMI: 'ईएमआई',\n  INCOME_TAX: 'आयकर',\n  MONTHLY_TAX: 'मासिक',\n  YEARLY_TAX: 'वार्षिक',\n  TAX_LIABILITY: 'कर दायित्व',\n  MARITAL_STATUS: 'वैवाहिक स्थिति',\n  INDIVIDUAL: 'एकल',\n  MARRIED: 'विवाहित',\n  MONTHLY_INCOME: 'महिनाको आम्दानी',\n  MARGIN_LENDING: 'मार्जिन लेन्दिङ',\n  MARGIN_AMOUNT: 'मार्जिन रकम',\n  MARGIN_PERCENT: 'मार्जिन प्रतिशत',\n  AVG_MKT_PRICE: '180 दिन बजार औसत मूल्य',\n  MARGIN_SHARE_COUNT: 'सेयर युनितस',\n  COMPANY_DETAILS: 'स्टॉक विवरण',\n  NAME: 'नाम',\n  SYMBOL: 'प्रतीक',\n  BOOK_VALUE: 'बुक भ्यालु',\n  OUTSTANDING_SHARES: 'सूचीबद्ध सेयर सन्ख्या',\n  MARKET_CAPITALIZATION: 'बाजार पूंजीकरण',\n  RSI: 'आरएसआई (14)',\n  MA: 'औसत मूल्य (180 दिन)',\n  LTP: 'एलटीपी',\n  PE: 'पीई अनुपात',\n  LAST_UPDATED: 'पछिल्लो अपडेट गरिएको',\n  HOLDING_PERIOD: 'होल्डिंग अवधि',\n  HOLDING_SHORT: 'छोटो समय (सीजीटी 7.5%)',\n  HOLDING_LONG: 'लामो समय (सीजीटी 5%)',\n  STOCK_LIST: 'स्टक सूची',\n  TABLE_BODY_NOMATCH: 'माफ गर्नुहोस्, कुनै मिल्दो रेकर्ड फेला परेन',\n  TABLE_BODY_TOOLTIP: 'क्रमबद्ध गर्नुहोस्',\n  TABLE_BODY_SORT_FOR: 'को लागि क्रमबद्ध गर्नुहोस्',\n  TABLE_PAGINATION_NEXT: 'अर्को पाना',\n  TABLE_PAGINATION_PREV: 'अघिल्लो पृष्ठ',\n  TABLE_PAGINATION_PER_PAGE: 'प्रति पृष्ठ पङ्क्तिहरू:',\n  TABLE_PAGINATION_OF: 'को',\n  TABLE_TOOLBAR_SEARCH: 'खोज्नुहोस्',\n  TABLE_TOOLBAR_DOWNLOAD_CV: 'Csv डाउनलोड गर्नुहोस्',\n  TABLE_TOOLBAR_PRINT: 'छाप्नुहोस्',\n  TABLE_TOOLBAR_VIEW_COLUMNS: 'स्तम्भहरू हेर्नुहोस्',\n  TABLE_TOOLBAR_FILTER_TABLE: 'फिल्टर तालिका',\n  TABLE_FILTER_ALL: 'सबै',\n  TABLE_FILTER_TITLE: 'फिल्टरहरू',\n  TABLE_FILTER_RESET: 'रिसेट गर्नुहोस्',\n  TABLE_VIEW_COLUMNS: 'स्तम्भहरू देखाउनुहोस्',\n  TABLE_VIEW_SH_TITLE: 'तालिका स्तम्भहरू देखाउनुहोस्/लुकाउनुहोस्',\n  TABLE_SELECTED_ROWS_TEXT: 'पङ्क्ति(हरू) चयन गरियो',\n  TABLE_SELECTED_ROWS_DELETE: 'मेटाउन',\n  TABLE_SELECTED_ROWS_DELETE_ARIA: 'चयन गरिएका पङ्क्तिहरू मेटाउनुहोस्',\n  PBV: 'पीबीभि',\n  LOW_52: '५२ हप्ता न्यून',\n  HIGH_52: '५२ हप्ता उच्च',\n  SECTOR_NAME: 'क्षेत्र',\n  VOLUME: 'भोल्युम',\n};\n\nexport default np;\n","import ENL from './en';\nimport NPL from './np';\n\nconst __ = (name: string, type: any = '') => {\n  const _ENL: any = ENL;\n  const _NPL: any = NPL;\n\n  switch (type) {\n    case 'en':\n      return _ENL[name] ? _ENL[name] : name;\n\n    case 'np':\n      return _NPL[name] ? _NPL[name] : name;\n  }\n\n  return name;\n};\n\nexport default __;\n","/* eslint-disable no-use-before-define */\nimport React, { useEffect, useState } from 'react';\nimport TextField from '@mui/material/TextField';\nimport Autocomplete from '@mui/material/Autocomplete';\n\nimport StockList from './stocklist.json';\nimport __ from './lang';\nimport config from './config';\n\nexport default function StockDropdown({ data, onAfterSelect, lang }: any) {\n  const [stocks, setStocks] = useState(StockList);\n\n  useEffect(() => {\n    if (data) {\n      setStocks(data.stocks);\n    }\n  }, [data]);\n\n  return (\n    <Autocomplete\n      onChange={(event, newValue) => {\n        onAfterSelect(newValue);\n      }}\n      id=\"combo-box-demo\"\n      options={stocks}\n      getOptionLabel={(option) => `${option.name} (${option.symbol})`}\n      style={{ width: 300 }}\n      renderInput={(params) => (\n        <TextField\n          {...params}\n          label={__('SELECT_STOCK', lang)}\n          variant=\"outlined\"\n          size=\"small\"\n        />\n      )}\n    />\n  );\n}\n","const config = {\n  api_url: 'https://chrome.nepalsharecalculator.com/webConfig.php',\n  bonus_cash_tax: 5,\n  broker_commission: [\n    { low: 0, high: 50000, value: 0.4 },\n    { low: 50001, high: 600000, value: 0.37 },\n    { low: 600001, high: 2000000, value: 0.34 },\n    { low: 2000001, high: 10000000, value: 0.3 },\n    { low: 10000001, high: 0, value: 0.27 },\n  ],\n  sebon_fee: 0.015,\n  demat_fee: 25,\n  price_to_book: 3,\n  token: 'bmVwYWxzaGFyZW1hcmtldHN0b2NrY2FsY3VsYXRvcmJ5aHR0cGRldmVsb3Blcg==',\n  tax_rates: {\n    I: [\n      { tax: 1, value: 400000 },\n      { tax: 10, value: 100000 },\n      { tax: 20, value: 200000 },\n      { tax: 30, value: 1300000 },\n      { tax: 36, value: 2000000 },\n    ],\n    M: [\n      { tax: 1, value: 450000 },\n      { tax: 10, value: 100000 },\n      { tax: 20, value: 200000 },\n      { tax: 30, value: 1250000 },\n      { tax: 36, value: 2000000 },\n    ],\n  },\n};\n\nexport default config;\n","import React, { useState, useEffect } from 'react';\nimport { makeStyles } from '@mui/styles';\nimport TextField from '@mui/material/TextField';\nimport Typography from '@mui/material/Typography';\nimport Paper from '@mui/material/Paper';\nimport NumberFormat from 'react-number-format';\n\nimport Stocks from '../stocks';\nimport config from '../config';\n\nimport __ from '../lang';\n\nconst useStyles = makeStyles({\n  root: {\n    '& > *': {\n      margin: '8px',\n      width: '300px',\n    },\n  },\n});\n\nexport default function BonusCashForm({ data, lang }: any) {\n  const classes = useStyles();\n\n  const [request, setRequest]: any = useState({\n    stock_name: '',\n    share_count: 0,\n    bonus_dividend_per: 0,\n    cash_dividend_per: 0,\n    total_dividend: 0,\n    tax: 0,\n    bonus_cash: 0,\n    bonus_share: 0,\n  });\n\n  const [bonusTax, setBonusTax] = useState(config.bonus_cash_tax);\n\n  useEffect(() => {\n    if (data) {\n      setBonusTax(data.bonus_cash_tax);\n    }\n  }, [data]);\n\n  const handleChange = (value: any, type: string) => {\n    if (value.trim() == '') value = 0;\n\n    if (value >= 0) {\n      request[type] = parseFloat(value);\n      setRequest(request);\n      _calculateBonusShare();\n    }\n  };\n\n  const _onAfterSelect = (data: any) => {\n    let stockName = '';\n    if (data && data != null) {\n      stockName = data.name;\n    }\n\n    setRequest((preState: any) => ({\n      ...preState,\n      stock_name: stockName,\n    }));\n  };\n\n  const _calculateBonusShare = () => {\n    const { share_count, bonus_dividend_per, cash_dividend_per } = request;\n    const total_dividend_per = bonus_dividend_per + cash_dividend_per;\n\n    let tax: any = 0;\n\n    if (cash_dividend_per >= 0) {\n      tax = (total_dividend_per * share_count * bonusTax) / 100;\n    }\n\n    const bonus_share = (bonus_dividend_per / 100) * share_count;\n    const bonus_cash = share_count * cash_dividend_per - tax;\n\n    setRequest((preRequest: any) => ({\n      ...preRequest,\n      bonus_cash,\n      bonus_share,\n    }));\n  };\n\n  const { share_count } = request;\n\n  return (\n    <form className={classes.root} noValidate autoComplete=\"off\">\n      {request.stock_name != '' &&\n      request.share_count > 0 &&\n      (request.bonus_share > 0 || request.bonus_cash > 0) ? (\n        <Paper variant=\"elevation\" style={{ padding: '10px' }}>\n          {lang == 'np' ? (\n            <div>\n              तपाईंले {companyName(request.stock_name)} बाट{' '}\n              {bonusShare(request.bonus_share.toFixed(2))} बोनस शेर प्राप्त\n              हुनेछ र {bonusCashValue(request.bonus_cash.toFixed(2))}\n              {request.bonus_cash > 0\n                ? ` बोनस क्यास पाउनेछ!`\n                : ` बोनश सेयर कर तिर्नु पर्नेछ!`}\n            </div>\n          ) : request.bonus_cash > 0 ? (\n            <div>\n              You will get {bonusShare(request.bonus_share.toFixed(2))} bonus\n              share and {bonusCashValue(request.bonus_cash.toFixed(2))} cash\n              dividend from {companyName(request.stock_name)}\n            </div>\n          ) : (\n            <div>\n              You will get {bonusShare(request.bonus_share.toFixed(2))} bonus\n              share and you have to pay{' '}\n              {bonusCashValue(request.bonus_cash.toFixed(2))} as bonus tax to{' '}\n              {companyName(request.stock_name)}\n            </div>\n          )}\n        </Paper>\n      ) : (\n        <div />\n      )}\n\n      <div>\n        <Stocks data={data} lang={lang} onAfterSelect={_onAfterSelect} />\n      </div>\n      <div>\n        <TextField\n          id=\"share-no\"\n          label={__('SHARE_COUNT', lang)}\n          variant=\"outlined\"\n          size=\"small\"\n          placeholder={__('ENTER_TEXT', lang)}\n          onChange={(e: any) => handleChange(e.target.value, 'share_count')}\n          value={share_count == 0 ? '' : share_count}\n          autoComplete=\"off\"\n          style={{ width: '300px' }}\n        />\n      </div>\n      <div>\n        <TextField\n          id=\"bonus-dividend\"\n          label={__('BONUS_SHARE', lang)}\n          variant=\"outlined\"\n          size=\"small\"\n          onChange={(e: any) =>\n            handleChange(e.target.value, 'bonus_dividend_per')\n          }\n          autoComplete=\"off\"\n          placeholder={__('ENTER_TEXT', lang)}\n          style={{ width: '300px' }}\n        />\n      </div>\n      <div>\n        <TextField\n          id=\"cash-dividend\"\n          label={__('BONUS_CASH', lang)}\n          variant=\"outlined\"\n          size=\"small\"\n          onChange={(e: any) =>\n            handleChange(e.target.value, 'cash_dividend_per')\n          }\n          autoComplete=\"off\"\n          placeholder={__('ENTER_TEXT', lang)}\n          style={{ width: '300px' }}\n        />\n      </div>\n    </form>\n  );\n}\n\nconst companyName = (name: any) => {\n  return (\n    <Typography color=\"primary\" component=\"span\" style={{ fontSize: '16px' }}>\n      <strong>{name}</strong>\n    </Typography>\n  );\n};\n\nconst bonusShare = (name: any) => {\n  return (\n    <Typography\n      component=\"span\"\n      style={{ fontSize: '22px', color: 'rgb(76, 175, 80)' }}\n    >\n      <strong>{name}</strong>\n    </Typography>\n  );\n};\n\nconst bonusCashValue = (value: any) => {\n  return (\n    <Typography\n      component=\"span\"\n      style={{\n        fontSize: '22px',\n        color: value > 0 ? 'rgb(76, 175, 80)' : 'rgb(220, 0, 78)',\n      }}\n    >\n      {value > 0 ? (\n        <strong>{getNumberFormat(value)}</strong>\n      ) : (\n        <strong>-{getNumberFormat(value * -1)}</strong>\n      )}\n    </Typography>\n  );\n};\n\nconst getNumberFormat = (value: any) => {\n  return (\n    <NumberFormat\n      value={value}\n      displayType={'text'}\n      thousandSeparator={true}\n      prefix={'रु'}\n    />\n  );\n};\n","import React, { useState, useEffect } from 'react';\n\nimport { makeStyles } from '@mui/styles';\nimport TextField from '@mui/material/TextField';\nimport Typography from '@mui/material/Typography';\nimport Paper from '@mui/material/Paper';\n\nimport Grid from '@mui/material/Grid';\n\nimport Radio from '@mui/material/Radio';\nimport RadioGroup from '@mui/material/RadioGroup';\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport FormControl from '@mui/material/FormControl';\nimport FormLabel from '@mui/material/FormLabel';\n\nimport NumberFormat from 'react-number-format';\n\nimport config from '../config';\n\nimport __ from '../lang';\n\nlet ln = 'np';\n\nconst useStyles = makeStyles({\n  root: {\n    '& > *': {\n      margin: '8px',\n      width: '300px',\n    },\n  },\n  rowX: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'center',\n    backgroundColor: '#ddd',\n  },\n  lblLeft: {\n    width: '120px',\n    fontSize: '13px',\n    fontWeight: 500,\n  },\n});\n\nfunction PLForm({ data, lang }: any) {\n  ln = lang;\n  const classes = useStyles();\n\n  const [requestObj, setRequestObj]: any = useState({\n    share_count: 0,\n    share_action: 'B',\n    buy_price: 0,\n    sell_price: 0,\n    amount: 0,\n    broker_commission: 0,\n    sebon_fee: 0,\n    demat_fee: 0,\n    total_amount: 0,\n    net_profit: 0,\n    capital_gain_tax: 0,\n    holding_period: 'S',\n  });\n\n  const [appData, setAppData] = useState({\n    bonus_cash_tax: config.bonus_cash_tax,\n    broker_commission: config.broker_commission,\n    sebon_fee: config.sebon_fee,\n    demat_fee: config.demat_fee,\n  });\n\n  useEffect(() => {\n    if (data) {\n      setAppData((preState: any) => ({\n        ...preState,\n        bonus_cash_tax: data.bonus_cash_tax,\n        broker_commission: data.broker_commission,\n        sebon_fee: data.sebon_fee,\n        demat_fee: data.demat_fee,\n      }));\n    }\n  }, [data]);\n\n  const _calculate = () => {\n    const {\n      share_count,\n      share_action,\n      buy_price,\n      sell_price,\n      holding_period,\n    } = requestObj;\n\n    let broker_commission = 0;\n    let sebon_fee = 0;\n    let demat_fee = 0;\n    let total_amount = 0;\n    let net_profit = 0;\n    let capital_gain_tax = 0;\n    let amount = 0;\n    let amount_2 = 0;\n    let broker_commission_2 = 0;\n    let sebon_fee_2 = 0;\n    let demat_fee_2 = 0;\n\n    switch (share_action) {\n      case 'B':\n        amount = share_count * buy_price;\n\n        broker_commission = getBrokerCommission(amount, appData);\n        sebon_fee = getSebonFee(amount, appData);\n        demat_fee = getDematFee(amount, appData);\n\n        if (amount > 0)\n          total_amount = amount + broker_commission + sebon_fee + demat_fee;\n        break;\n      case 'S':\n        amount_2 = share_count * buy_price;\n        broker_commission_2 = getBrokerCommission(amount_2, appData);\n        sebon_fee_2 = getSebonFee(amount_2, appData);\n        demat_fee_2 = getDematFee(amount_2, appData);\n\n        const payAmt_1 =\n          amount_2 + broker_commission_2 + sebon_fee_2 + demat_fee_2;\n\n        amount = share_count * sell_price;\n        broker_commission = getBrokerCommission(amount, appData);\n        sebon_fee = getSebonFee(amount, appData);\n        demat_fee = getDematFee(amount, appData);\n\n        const payAmt_2 = amount - broker_commission - sebon_fee - demat_fee;\n\n        net_profit = payAmt_2 - payAmt_1;\n        capital_gain_tax =\n          net_profit > 0\n            ? (net_profit * (holding_period === 'L' ? 5 : 7.5)) / 100\n            : 0;\n\n        if (amount > 0) {\n          total_amount =\n            amount -\n            broker_commission -\n            sebon_fee -\n            demat_fee -\n            capital_gain_tax;\n\n          net_profit = total_amount - payAmt_1;\n        }\n        break;\n    }\n\n    setRequestObj((preState: any) => ({\n      ...preState,\n      amount,\n      broker_commission,\n      sebon_fee,\n      demat_fee,\n      total_amount,\n      net_profit,\n      capital_gain_tax,\n    }));\n  };\n\n  const handleChange = (value: any, type: string) => {\n    if (type != 'share_action' && type != 'holding_period' && !(value > 0)) {\n      if (value == '') value = 0;\n      else return;\n    }\n\n    requestObj[type] =\n      type == 'share_action' || type == 'holding_period'\n        ? value\n        : parseFloat(value);\n    setRequestObj(requestObj);\n    _calculate();\n  };\n\n  const {\n    total_amount,\n    share_action,\n    share_count,\n    buy_price,\n    sell_price,\n    amount,\n    broker_commission,\n    sebon_fee,\n    demat_fee,\n    capital_gain_tax,\n    net_profit,\n    holding_period,\n  } = requestObj;\n\n  return (\n    <form className={classes.root} noValidate autoComplete=\"off\">\n      {total_amount > 0 && (\n        <Paper variant=\"elevation\" style={{ padding: '10px' }}>\n          {share_action == 'B' &&\n            (lang == 'np' ? (\n              <div>\n                यदि तपाईंले {getFormatQty(share_count)} किता सेयर{' '}\n                {getFormatAmount(buy_price)} को दरले किन्नु भयो भने तपाईंले{' '}\n                {getFormatAmountX(total_amount, share_action)} तिर्नु पर्ने\n                हुन्छ!\n              </div>\n            ) : (\n              <div>\n                If you buy {getFormatQty(share_count)}\n                {share_count == 1 ? ' share' : ' shares'} at the price of{' '}\n                {getFormatAmount(buy_price)} then you will pay{' '}\n                {getFormatAmountX(total_amount, share_action)}\n              </div>\n            ))}\n\n          {share_action == 'S' &&\n            (lang == 'np' ? (\n              <div>\n                यदि तपाईंले {getFormatQty(share_count)} किता सेयर{' '}\n                {getFormatAmount(sell_price)} को दरले बेच्नु भयो भने तपाईंले{' '}\n                {getValueColorX(total_amount)} पाउनु हुनेछ!\n              </div>\n            ) : (\n              <div>\n                If you sell {getFormatQty(share_count)}\n                {share_count == 1 ? ' share' : ' shares'} at the price of{' '}\n                {getFormatAmount(sell_price)} then you will get{' '}\n                {getValueColorX(total_amount)}\n              </div>\n            ))}\n\n          <div style={{ marginTop: '5px' }}>\n            <Typography\n              style={{ fontWeight: 600 }}\n              className={classes.lblLeft}\n              component=\"span\"\n            >\n              {__('DETAILS', lang)}\n            </Typography>\n            <Grid container direction=\"row\">\n              <Grid style={{ fontSize: '12px' }} item xs={4}>\n                <Typography className={classes.lblLeft} component=\"span\">\n                  {__('PRICE', lang)}\n                </Typography>\n              </Grid>\n              <Grid item xs={8}>\n                <span>{getAmount(amount)}</span>\n              </Grid>\n            </Grid>\n            <Grid container direction=\"row\">\n              <Grid item xs={4}>\n                <Typography className={classes.lblLeft} component=\"span\">\n                  {__('BROKER_COMMISSION', lang)}\n                </Typography>\n              </Grid>\n              <Grid item xs={8}>\n                <span>{getFormatPayAmount(broker_commission)}</span>\n              </Grid>\n            </Grid>\n            <Grid container direction=\"row\">\n              <Grid item xs={4}>\n                <Typography className={classes.lblLeft} component=\"span\">\n                  {__('SEBON_FEE', lang)}\n                </Typography>\n              </Grid>\n              <Grid item xs={8}>\n                <span>{getFormatPayAmount(sebon_fee)}</span>\n              </Grid>\n            </Grid>\n            <Grid container direction=\"row\">\n              <Grid item xs={4}>\n                <Typography className={classes.lblLeft} component=\"span\">\n                  {__('DEMAT_FEE', lang)}\n                </Typography>\n              </Grid>\n              <Grid item xs={8}>\n                <span>{getFormatPayAmount(demat_fee)}</span>\n              </Grid>\n            </Grid>\n            {share_action == 'S' && (\n              <Grid container direction=\"row\">\n                <Grid item xs={4}>\n                  <Typography className={classes.lblLeft} component=\"span\">\n                    {__('CAPITAL_GAIN_TAX', lang)} (\n                    {holding_period === 'S' ? '7.5%' : '5%'})\n                  </Typography>\n                </Grid>\n                <Grid item xs={8}>\n                  <span>{getFormatPayAmount(capital_gain_tax)}</span>\n                </Grid>\n              </Grid>\n            )}\n            <Grid container direction=\"row\">\n              <Grid item xs={4}>\n                {share_action == 'S' ? (\n                  <Typography className={classes.lblLeft} component=\"span\">\n                    {__('TOTAL_RECEIVABLE', lang)}\n                  </Typography>\n                ) : (\n                  <Typography className={classes.lblLeft} component=\"span\">\n                    {__('TOTAL_PAYABLE', lang)}\n                  </Typography>\n                )}\n              </Grid>\n              <Grid item xs={8}>\n                <span>{getValueColorByAction(total_amount, share_action)}</span>\n              </Grid>\n            </Grid>\n            {share_action == 'S' && (\n              <Grid container direction=\"row\">\n                <Grid item xs={4}>\n                  <Typography className={classes.lblLeft} component=\"span\">\n                    {net_profit > 0 ? __('PROFIT', lang) : __('LOSS', lang)}\n                  </Typography>\n                </Grid>\n                <Grid item xs={8}>\n                  <span> {getValueColor(net_profit)}</span>\n                </Grid>\n              </Grid>\n            )}\n          </div>\n        </Paper>\n      )}\n\n      {/* <Typography variant=\"subtitle1\" color=\"textPrimary\">\n        व्यक्तिगत शेर खरिद बिक्री क्यालकुलेटर\n      </Typography> */}\n      <div>\n        <FormControl component=\"fieldset\">\n          <FormLabel component=\"legend\">\n            {__('WHAT_BUSINESS_DOING', lang)}\n          </FormLabel>\n          <RadioGroup\n            value={share_action}\n            onChange={(e: any) => handleChange(e.target.value, 'share_action')}\n          >\n            <div style={{ flexDirection: 'row' }}>\n              <FormControlLabel\n                value=\"B\"\n                control={<Radio />}\n                label={__('BUY_SHARE', lang)}\n              />\n              <FormControlLabel\n                value=\"S\"\n                control={<Radio />}\n                label={__('SELL_SHARE', lang)}\n              />\n            </div>\n          </RadioGroup>\n        </FormControl>\n      </div>\n\n      <div>\n        <TextField\n          id=\"share-no\"\n          label={\n            share_action == 'S'\n              ? __('WHAT_SHARE_QTY_SELL', lang)\n              : __('WHAT_SHARE_QTY_BUY', lang)\n          }\n          variant=\"outlined\"\n          size=\"small\"\n          placeholder={__('ENTER_TEXT', lang)}\n          onChange={(e: any) => handleChange(e.target.value, 'share_count')}\n          autoComplete=\"off\"\n          value={share_count == 0 ? '' : share_count}\n          style={{ width: '300px' }}\n        />\n      </div>\n      {share_action == 'S' && share_count > 0 && (\n        <div style={{ marginTop: '10px' }}>\n          <FormControl component=\"fieldset\">\n            <FormLabel component=\"legend\">\n              {__('HOLDING_PERIOD', lang)}\n            </FormLabel>\n            <RadioGroup\n              value={holding_period}\n              onChange={(e: any) =>\n                handleChange(e.target.value, 'holding_period')\n              }\n            >\n              <div style={{ flexDirection: 'row' }}>\n                <FormControlLabel\n                  value=\"S\"\n                  control={<Radio />}\n                  label={__('HOLDING_SHORT', lang)}\n                />\n                <FormControlLabel\n                  value=\"L\"\n                  control={<Radio />}\n                  label={__('HOLDING_LONG', lang)}\n                />\n              </div>\n            </RadioGroup>\n          </FormControl>\n        </div>\n      )}\n      <div>\n        <TextField\n          label={__('BUY_PRICE', lang)}\n          variant=\"outlined\"\n          size=\"small\"\n          placeholder={__('ENTER_TEXT', lang)}\n          onChange={(e: any) => handleChange(e.target.value, 'buy_price')}\n          autoComplete=\"off\"\n          style={{ width: '300px' }}\n        />\n      </div>\n      {share_action == 'S' && (\n        <div>\n          <div>\n            <TextField\n              label={__('SELL_PRICE', lang)}\n              variant=\"outlined\"\n              size=\"small\"\n              placeholder={__('ENTER_TEXT', lang)}\n              onChange={(e: any) => handleChange(e.target.value, 'sell_price')}\n              autoComplete=\"off\"\n            />\n          </div>\n        </div>\n      )}\n    </form>\n  );\n}\n\nexport default PLForm;\n\nconst getMaxValue = (value: number) => {\n  const values = [];\n  values.push(value);\n  values.push(10);\n\n  return Math.max(...values);\n};\n\nconst getBrokerCommission = (value: number, appData: any) => {\n  const broker_commissions = appData.broker_commission;\n\n  let bcValue = 0;\n\n  broker_commissions.forEach((v: any, i: number) => {\n    if (value >= v.low && value <= v.high) {\n      bcValue = getMaxValue((value * v.value) / 100);\n    }\n  });\n\n  if (bcValue == 0) {\n    const lastElement = broker_commissions[broker_commissions.length - 1];\n\n    bcValue = getMaxValue((value * lastElement.value) / 100);\n  }\n\n  return bcValue;\n};\nconst getSebonFee = (value: number, appData: any) => {\n  return (value * config.sebon_fee) / 100;\n};\nconst getDematFee = (value: number, appData: any) => {\n  return appData.demat_fee;\n};\n\nconst getFormatAmount = (value: any) => {\n  return (\n    <Typography\n      color={value > 0 ? 'primary' : 'secondary'}\n      component=\"span\"\n      style={{ fontSize: '22px' }}\n    >\n      <strong>{getNumberFormat(value.toFixed(2))}</strong>\n    </Typography>\n  );\n};\n\nconst getFormatQty = (value: any) => {\n  return (\n    <Typography\n      color={value > 0 ? 'primary' : 'secondary'}\n      component=\"span\"\n      style={{ fontSize: '22px' }}\n    >\n      <strong>{getNumberFormatWPrefix(value)}</strong>\n    </Typography>\n  );\n};\n\nconst getFormatPayAmount = (value: any) => {\n  return (\n    <Typography color={'secondary'} component=\"span\">\n      <strong>{getNumberFormat(value.toFixed(2))}</strong>\n    </Typography>\n  );\n};\n\nconst getFormatAmountX = (value: any, share_action: string) => {\n  return (\n    <Typography\n      color={share_action == 'S' ? 'primary' : 'secondary'}\n      component=\"span\"\n      style={{ fontSize: '22px' }}\n    >\n      <strong>{getNumberFormat(value.toFixed(2))}</strong>\n    </Typography>\n  );\n};\n\nconst getFormatValue = (value: any) => {\n  return (\n    <Typography color=\"primary\" component=\"span\" style={{ fontSize: '22px' }}>\n      <strong>{getNumberFormat(value)}</strong>\n    </Typography>\n  );\n};\n\nconst getAmount = (value: any) => {\n  return (\n    <Typography color={value >= 0 ? 'primary' : 'secondary'} component=\"span\">\n      <strong>{getNumberFormat(value.toFixed(2))}</strong>\n    </Typography>\n  );\n};\n\nconst getValueColorByAction = (value: any, share_action: any) => {\n  return (\n    <Typography\n      style={{\n        color: share_action == 'S' ? 'rgb(76, 175, 80)' : 'rgb(220, 0, 78)',\n      }}\n      component=\"span\"\n    >\n      {value > 0 ? (\n        <strong>{getNumberFormat(value.toFixed(2))}</strong>\n      ) : (\n        <strong>-{getNumberFormat((value * -1).toFixed(2))}</strong>\n      )}\n    </Typography>\n  );\n};\n\nconst getValueColor = (value: any) => {\n  return (\n    <Typography\n      style={{\n        color: value > 0 ? 'rgb(76, 175, 80)' : 'rgb(220, 0, 78)',\n      }}\n      component=\"span\"\n    >\n      {value > 0 ? (\n        <strong>{getNumberFormat(value.toFixed(2))}</strong>\n      ) : (\n        <strong>-{getNumberFormat((value * -1).toFixed(2))}</strong>\n      )}\n    </Typography>\n  );\n};\nconst getValueColorX = (value: any) => {\n  return (\n    <Typography\n      style={{\n        color: value > 0 ? 'rgb(76, 175, 80)' : 'rgb(220, 0, 78)',\n        fontSize: '22px',\n      }}\n      component=\"span\"\n    >\n      {value > 0 ? (\n        <strong>{getNumberFormat(value.toFixed(2))}</strong>\n      ) : (\n        <strong>-{getNumberFormat((value * -1).toFixed(2))}</strong>\n      )}\n    </Typography>\n  );\n};\n\nconst getNumberFormat = (value: any) => {\n  return (\n    <NumberFormat\n      value={value}\n      displayType={'text'}\n      thousandSeparator={true}\n      prefix={ln === 'np' ? 'रु' : 'रु'}\n    />\n  );\n};\n\nconst getNumberFormatWPrefix = (value: any) => {\n  return (\n    <NumberFormat value={value} displayType={'text'} thousandSeparator={true} />\n  );\n};\n","import React, { useState } from 'react';\nimport { makeStyles } from '@mui/styles';\nimport TextField from '@mui/material/TextField';\nimport Typography from '@mui/material/Typography';\nimport Paper from '@mui/material/Paper';\nimport NumberFormat from 'react-number-format';\n\nimport __ from '../lang';\n\nconst useStyles = makeStyles({\n  root: {\n    '& > *': {\n      margin: '8px',\n      width: '300px',\n    },\n  },\n});\n\nfunction BonusPriceAdjustment({ data, lang }: any) {\n  const [request, setRequest]: any = useState({\n    bonus: 0,\n    ltp: 0,\n    market_price: 0,\n  });\n\n  const classes = useStyles();\n\n  const _calculate = () => {\n    const { bonus, ltp } = request;\n\n    const market_price = ltp / (1 + bonus / 100);\n\n    setRequest((preState: any) => ({\n      ...preState,\n      market_price,\n    }));\n  };\n\n  const handleChange = (value: any, type: any) => {\n    request[type] = parseFloat(value);\n    setRequest(request);\n    _calculate();\n  };\n\n  const { bonus, ltp, market_price } = request;\n\n  return (\n    <form className={classes.root} noValidate autoComplete=\"off\">\n      {market_price > 0 && ltp > 0 && bonus > 0 && (\n        <Paper style={{ padding: '10px' }}>\n          {lang == 'np' ? (\n            <div>\n              बुक क्लोज डेट पछाडिको बजार मूल्य: {formatValue(market_price)}\n            </div>\n          ) : (\n            <div>\n              Market Price After Price Adjustment: {formatValue(market_price)}\n            </div>\n          )}\n        </Paper>\n      )}\n      <div>\n        <TextField\n          autoFocus={false}\n          id=\"share-no\"\n          label={__('LTP_BEFORE_BCD', lang)}\n          variant=\"outlined\"\n          size=\"small\"\n          placeholder={__('ENTER_TEXT', lang)}\n          onChange={(e: any) => handleChange(e.target.value, 'ltp')}\n          autoComplete=\"off\"\n          style={{ width: '300px' }}\n        />\n      </div>\n      <div>\n        <TextField\n          autoFocus={false}\n          id=\"cash-dividend\"\n          label={__('BONUS_SHARE', lang)}\n          variant=\"outlined\"\n          size=\"small\"\n          onChange={(e: any) => handleChange(e.target.value, 'bonus')}\n          autoComplete=\"off\"\n          placeholder={__('ENTER_TEXT', lang)}\n          style={{ width: '300px' }}\n        />\n      </div>\n    </form>\n  );\n}\n\nexport default BonusPriceAdjustment;\n\nconst formatValue = (value: any) => {\n  return (\n    <Typography\n      component=\"span\"\n      color=\"primary\"\n      style={{\n        fontSize: '22px',\n      }}\n    >\n      <strong>{getNumberFormat(value.toFixed(2))}</strong>\n    </Typography>\n  );\n};\n\nconst getNumberFormat = (value: any) => {\n  return (\n    <NumberFormat\n      value={value}\n      displayType={'text'}\n      thousandSeparator={true}\n      prefix={'रु'}\n    />\n  );\n};\n","import React, { useState } from 'react';\n\nimport { makeStyles } from '@mui/styles';\nimport TextField from '@mui/material/TextField';\nimport Typography from '@mui/material/Typography';\nimport Paper from '@mui/material/Paper';\n\nimport NumberFormat from 'react-number-format';\nimport __ from '../lang';\n\nconst useStyles = makeStyles({\n  root: {\n    '& > *': {\n      margin: '8px',\n      width: '300px',\n    },\n  },\n});\n\nfunction RightSharePriceAdjustment({ data, lang }: any) {\n  const [request, setRequest]: any = useState({\n    bonus: 0,\n    ltp: 0,\n    market_price: 0,\n  });\n\n  const classes = useStyles();\n\n  const _calculate = () => {\n    const { bonus, ltp } = request;\n\n    const market_price = (ltp + bonus) / (1 + bonus / 100);\n\n    setRequest((preState: any) => ({\n      ...preState,\n      market_price,\n    }));\n  };\n\n  const handleChange = (value: any, type: any) => {\n    request[type] = parseFloat(value);\n    setRequest(request);\n    _calculate();\n  };\n\n  const { bonus, ltp, market_price } = request;\n\n  return (\n    <form className={classes.root} noValidate autoComplete=\"off\">\n      {market_price > 0 && ltp > 0 && bonus > 0 && (\n        <Paper style={{ padding: '10px' }}>\n          {lang === 'np' ? (\n            <div>\n              बुक क्लोज डेट पछाडिको बजार मूल्य: {formatValue(market_price)}\n            </div>\n          ) : (\n            <div>\n              Market Price After Right Adjustment: {formatValue(market_price)}\n            </div>\n          )}\n        </Paper>\n      )}\n      <div>\n        <TextField\n          id=\"share-no\"\n          label={__('LTP_BEFORE_BCD', lang)}\n          variant=\"outlined\"\n          size=\"small\"\n          placeholder={__('ENTER_TEXT', lang)}\n          onChange={(e: any) => handleChange(e.target.value, 'ltp')}\n          autoComplete=\"off\"\n          style={{ width: '300px' }}\n        />\n      </div>\n      <div>\n        <TextField\n          id=\"cash-dividend\"\n          label={__('RIGHT_SHARE', lang)}\n          variant=\"outlined\"\n          size=\"small\"\n          onChange={(e: any) => handleChange(e.target.value, 'bonus')}\n          autoComplete=\"off\"\n          placeholder={__('ENTER_TEXT', lang)}\n          style={{ width: '300px' }}\n        />\n      </div>\n    </form>\n  );\n}\n\nexport default RightSharePriceAdjustment;\n\nconst formatValue = (value: any) => {\n  return (\n    <Typography\n      component=\"span\"\n      color=\"primary\"\n      style={{\n        fontSize: '22px',\n      }}\n    >\n      <strong>{getNumberFormat(value.toFixed(2))}</strong>\n    </Typography>\n  );\n};\n\nconst getNumberFormat = (value: any) => {\n  return (\n    <NumberFormat\n      value={value}\n      displayType={'text'}\n      thousandSeparator={true}\n      prefix={'रु'}\n    />\n  );\n};\n","import React, { useState, useEffect } from 'react';\n\nimport { makeStyles } from '@mui/styles';\nimport TextField from '@mui/material/TextField';\nimport Typography from '@mui/material/Typography';\nimport Paper from '@mui/material/Paper';\n\nimport NumberFormat from 'react-number-format';\n\nimport config from '../config';\nimport Stocks from '../stocks';\n\nimport __ from '../lang';\n\nconst useStyles = makeStyles({\n  root: {\n    '& > *': {\n      margin: '8px',\n      width: '300px',\n    },\n  },\n});\n\nfunction GForm({ data, lang }: any) {\n  const classes = useStyles();\n  const [requestObj, setRequestObj]: any = useState({\n    pricetoearning: '',\n    pricetobook: config.price_to_book,\n    eps: '',\n    bvps: '',\n    fair_value: 0,\n    market_price: '',\n    stock_name: '',\n    diff_price: 0,\n  });\n\n  useEffect(() => {\n    if (data) {\n      setRequestObj((preState: any) => ({\n        ...preState,\n        pricetobook: data.price_to_book,\n      }));\n    }\n  }, [data]);\n\n  const _calculate = () => {\n    const {\n      pricetoearning,\n      pricetobook,\n      eps,\n      bvps,\n      market_price,\n    }: any = requestObj;\n\n    const fair_value = Math.sqrt(pricetoearning * pricetobook * eps * bvps);\n\n    const diff_price = market_price - fair_value;\n\n    setRequestObj((preState: any) => ({\n      ...preState,\n      fair_value,\n      diff_price,\n    }));\n  };\n\n  const handleChange = (value: any, type: string) => {\n    requestObj[type] = parseFloat(value);\n    setRequestObj(requestObj);\n    _calculate();\n  };\n\n  const _onAfterSelect = (data: any) => {\n    let stockName = '';\n    let eps = '';\n    let pe = '';\n    let book_value = '';\n    let market_price = '';\n    if (data && data != null) {\n      stockName = data.name;\n      eps = data.eps;\n      pe = data.pe;\n      book_value = data.book_value;\n      market_price = data.ltp;\n    }\n\n    setRequestObj((preState: any) => ({\n      ...preState,\n      stock_name: stockName,\n      eps,\n      pricetoearning: pe,\n      bvps: book_value,\n    }));\n  };\n\n  const {\n    fair_value,\n    stock_name,\n    diff_price,\n    market_price,\n    eps,\n    bvps,\n    pricetoearning,\n  } = requestObj;\n\n  const showDiv =\n    stock_name != '' &&\n    fair_value > 0 &&\n    market_price > 0 &&\n    fair_value.toFixed(2) != market_price;\n\n  return (\n    <div className={classes.root}>\n      {showDiv && (\n        <Paper style={{ padding: '10px' }}>\n          {lang == 'en' ? (\n            <div>\n              The fair value of the stock {companyName(stock_name)} is{' '}\n              {getValue(fair_value)}\n            </div>\n          ) : (\n            <div>\n              {companyName(stock_name)} को फेअर भ्यालु {getValue(fair_value)} हो\n            </div>\n          )}\n        </Paper>\n      )}\n\n      <div>\n        <Stocks data={data} lang={lang} onAfterSelect={_onAfterSelect} />\n      </div>\n\n      <div>\n        <TextField\n          label={__('MARKET_PRICE', lang)}\n          variant=\"outlined\"\n          size=\"small\"\n          placeholder={__('ENTER_TEXT', lang)}\n          onChange={(e: any) => handleChange(e.target.value, 'market_price')}\n          autoComplete=\"off\"\n          style={{ width: '300px' }}\n        />\n        {showDiv && (\n          <span>\n            {lang == 'en' ? (\n              <span style={{ fontSize: '11px' }}>\n                {getDiffValue(diff_price)} {diff_price > 0 ? 'high' : 'low'}{' '}\n                from fair value\n              </span>\n            ) : (\n              <span style={{ fontSize: '11px' }}>\n                फेअर भ्यालु भन्दा {getDiffValue(diff_price)}{' '}\n                {diff_price > 0 ? 'बढी' : 'कम'}\n              </span>\n            )}\n          </span>\n        )}\n      </div>\n\n      <div>\n        <TextField\n          label={__('PRICE_TO_EARNING_RATIO', lang)}\n          variant=\"outlined\"\n          size=\"small\"\n          placeholder={__('ENTER_TEXT', lang)}\n          onChange={(e: any) => handleChange(e.target.value, 'pricetoearning')}\n          autoComplete=\"off\"\n          style={{ width: '300px' }}\n          value={pricetoearning}\n        />\n      </div>\n\n      <div>\n        <TextField\n          label={__('EPS', lang)}\n          variant=\"outlined\"\n          size=\"small\"\n          placeholder={__('ENTER_TEXT', lang)}\n          onChange={(e: any) => handleChange(e.target.value, 'eps')}\n          autoComplete=\"off\"\n          style={{ width: '300px' }}\n          value={eps}\n        />\n      </div>\n      <div>\n        <TextField\n          label={__('BPVS', lang)}\n          variant=\"outlined\"\n          size=\"small\"\n          placeholder={__('ENTER_TEXT', lang)}\n          onChange={(e: any) => handleChange(e.target.value, 'bvps')}\n          autoComplete=\"off\"\n          style={{ width: '300px' }}\n          value={bvps}\n        />\n      </div>\n    </div>\n  );\n}\n\nexport default GForm;\n\nconst companyName = (name: any) => {\n  return (\n    <Typography color=\"primary\" component=\"span\" style={{ fontSize: '16px' }}>\n      <strong>{name}</strong>\n    </Typography>\n  );\n};\n\nconst getValue = (value: any) => {\n  return (\n    <Typography component=\"span\" color=\"primary\" style={{ fontSize: '22px' }}>\n      <strong>{getNumberFormat(value.toFixed(2))}</strong>\n    </Typography>\n  );\n};\n\nconst getDiffValue = (value: any) => {\n  return (\n    <Typography\n      component=\"span\"\n      style={{\n        color: value > 0 ? 'rgb(76, 175, 80)' : 'rgb(220, 0, 78)',\n      }}\n    >\n      {value > 0 ? (\n        <strong>+{getNumberFormat(value.toFixed(2))}</strong>\n      ) : (\n        <strong>-{getNumberFormat((value * -1).toFixed(2))}</strong>\n      )}\n    </Typography>\n  );\n};\n\nconst getNumberFormat = (value: any) => {\n  return (\n    <NumberFormat\n      value={value}\n      displayType={'text'}\n      thousandSeparator={true}\n      prefix={'रु'}\n    />\n  );\n};\n","import React, { useState } from 'react';\nimport { makeStyles } from '@mui/styles';\nimport TextField from '@mui/material/TextField';\nimport Typography from '@mui/material/Typography';\nimport Paper from '@mui/material/Paper';\n\nimport NumberFormat from 'react-number-format';\n\nimport config from '../config';\n\nimport __ from '../lang';\n\nconst useStyles = makeStyles({\n  root: {\n    '& > *': {\n      margin: '8px',\n      width: '300px',\n    },\n  },\n});\n\nexport default function EMI({ data, lang }: any) {\n  const classes = useStyles();\n\n  const [request, setRequest]: any = useState({\n    principal: 0,\n    interest: 0,\n    period: 0,\n    monthly_payment: 0,\n    total_payment: 0,\n    total_interest: 0,\n  });\n\n  const handleChange = (value: any, type: string) => {\n    if (value.trim() == '') value = 0;\n\n    if (value >= 0) {\n      request[type] = parseFloat(value);\n      setRequest(request);\n      _calculate();\n    }\n  };\n\n  const _calculate = () => {\n    const principal = parseFloat(request.principal);\n    const interest = parseFloat(request.interest) / 100 / 12;\n    const periods = parseFloat(request.period) * 12;\n\n    if (!(principal > 0 && interest > 0 && periods > 0))\n      return setRequest((preRequest: any) => ({\n        ...preRequest,\n        monthly_payment: 0,\n        total_payment: 0,\n        total_interest: 0,\n      }));\n\n    // compute the monthly payment figure\n    const x = Math.pow(1 + interest, periods);\n    const monthly_payment = (principal * x * interest) / (x - 1);\n    const total_payment = monthly_payment * periods;\n    const total_interest = monthly_payment * periods - principal;\n    setRequest((preRequest: any) => ({\n      ...preRequest,\n      monthly_payment,\n      total_payment,\n      total_interest,\n    }));\n  };\n\n  const { monthly_payment, total_payment, total_interest } = request;\n\n  return (\n    <form className={classes.root} noValidate autoComplete=\"off\">\n      {request.monthly_payment > 0 ? (\n        <Paper variant=\"elevation\" style={{ padding: '10px' }}>\n          <div>\n            {__('EMI', lang)}: {getValue(monthly_payment)}\n          </div>\n          <div>\n            {__('TOTAL_INTEREST', lang)}: {getValue(total_interest)}\n          </div>\n          <div>\n            {__('TOTAL_PAYMENT', lang)}: {getValue(total_payment)}\n          </div>\n        </Paper>\n      ) : (\n        <div />\n      )}\n\n      <div>\n        <TextField\n          id=\"share-no\"\n          label={__('PRINCIPAL_AMOUNT', lang)}\n          variant=\"outlined\"\n          size=\"small\"\n          placeholder={__('ENTER_TEXT', lang)}\n          onChange={(e: any) => handleChange(e.target.value, 'principal')}\n          autoComplete=\"off\"\n          style={{ width: '300px' }}\n        />\n      </div>\n      <div>\n        <TextField\n          id=\"bonus-dividend\"\n          label={__('INTEREST_RATE', lang)}\n          variant=\"outlined\"\n          size=\"small\"\n          onChange={(e: any) => handleChange(e.target.value, 'interest')}\n          autoComplete=\"off\"\n          placeholder={__('ENTER_TEXT', lang)}\n          style={{ width: '300px' }}\n        />\n      </div>\n      <div>\n        <TextField\n          id=\"cash-dividend\"\n          label={__('PERIOD', lang)}\n          variant=\"outlined\"\n          size=\"small\"\n          onChange={(e: any) => handleChange(e.target.value, 'period')}\n          autoComplete=\"off\"\n          placeholder={__('ENTER_TEXT', lang)}\n          style={{ width: '300px' }}\n        />\n      </div>\n    </form>\n  );\n}\n\nconst getValue = (value: any) => {\n  return (\n    <Typography\n      component=\"span\"\n      color=\"secondary\"\n      style={{\n        fontSize: '22px',\n      }}\n    >\n      <strong>{getNumberFormat(value.toFixed(2))}</strong>\n    </Typography>\n  );\n};\n\nconst getNumberFormat = (value: any) => {\n  return (\n    <NumberFormat\n      value={value}\n      displayType={'text'}\n      thousandSeparator={true}\n      prefix={'रु'}\n    />\n  );\n};\n","import React, { useState, useEffect } from 'react';\n\nimport { makeStyles } from '@mui/styles';\nimport TextField from '@mui/material/TextField';\nimport Typography from '@mui/material/Typography';\nimport Paper from '@mui/material/Paper';\n\nimport NumberFormat from 'react-number-format';\nimport Radio from '@mui/material/Radio';\nimport RadioGroup from '@mui/material/RadioGroup';\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport FormControl from '@mui/material/FormControl';\nimport FormLabel from '@mui/material/FormLabel';\n\nimport __ from '../lang';\nimport config from '../config';\n\nconst useStyles = makeStyles({\n  root: {\n    '& > *': {\n      margin: '8px',\n      width: '300px',\n    },\n  },\n});\n\nexport default function IncomeTax({ data, lang }: any) {\n  const classes = useStyles();\n\n  const [request, setRequest]: any = useState({\n    monthly_income: 0,\n    marital_status: 'I',\n    monthly_tax: 0,\n    tax_rates: config.tax_rates,\n  });\n\n  useEffect(() => {\n    if (data && data.tax_rates) {\n      setRequest((preState: any) => ({\n        ...preState,\n        tax_rates: data.tax_rates,\n      }));\n    }\n  }, [data]);\n\n  const handleChange = (value: any, type: string) => {\n    if (value.trim() == '') value = 0;\n\n    if (value >= 0 || type === 'marital_status') {\n      request[type] = type === 'marital_status' ? value : parseFloat(value);\n      setRequest(request);\n      _calculate();\n    }\n  };\n\n  const _calculate = () => {\n    const { monthly_income, marital_status, tax_rates } = request;\n\n    const yearly_income = monthly_income * 12;\n\n    const taxes = tax_rates[marital_status];\n    let yearly_tax = 0;\n\n    const firstItem = taxes[0];\n\n    if (firstItem.value >= yearly_income) {\n      yearly_tax = (yearly_income * firstItem.tax) / 100;\n      return setRequest((preRequest: any) => ({\n        ...preRequest,\n        monthly_tax: yearly_tax / 12,\n      }));\n    }\n\n    let y = yearly_income;\n\n    const n = taxes.length - 1;\n\n    let addTax = true;\n\n    taxes.forEach((item: any, i: number) => {\n      if (addTax) {\n        let tax = 0;\n\n        if (y > item.value && i !== n) {\n          tax = (item.value * item.tax) / 100;\n        } else {\n          tax = (y * item.tax) / 100;\n        }\n\n        if (y > item.value) {\n          y = y - item.value;\n        } else {\n          addTax = false;\n        }\n\n        yearly_tax += tax;\n      }\n    });\n\n    setRequest((preRequest: any) => ({\n      ...preRequest,\n      monthly_tax: yearly_tax / 12,\n    }));\n  };\n\n  const { monthly_tax, marital_status } = request;\n\n  return (\n    <form className={classes.root} noValidate autoComplete=\"off\">\n      {monthly_tax > 0 ? (\n        <Paper variant=\"elevation\" style={{ padding: '10px' }}>\n          <div>{__('TAX_LIABILITY', lang)}</div>\n          <div>\n            {__('MONTHLY_TAX', lang)}: {getValue(monthly_tax)}\n          </div>\n          <div>\n            {__('YEARLY_TAX', lang)}: {getValue(monthly_tax * 12)}\n          </div>\n        </Paper>\n      ) : (\n        <div />\n      )}\n\n      <div>\n        <FormControl component=\"fieldset\">\n          <FormLabel component=\"legend\">{__('MARITAL_STATUS', lang)}</FormLabel>\n          <RadioGroup\n            value={marital_status}\n            onChange={(e: any) =>\n              handleChange(e.target.value, 'marital_status')\n            }\n          >\n            <FormControlLabel\n              value=\"I\"\n              control={<Radio />}\n              label={__('INDIVIDUAL', lang)}\n            />\n            <FormControlLabel\n              value=\"M\"\n              control={<Radio />}\n              label={__('MARRIED', lang)}\n            />\n          </RadioGroup>\n        </FormControl>\n      </div>\n\n      <div>\n        <TextField\n          id=\"monthly_income\"\n          label={__('MONTHLY_INCOME', lang)}\n          variant=\"outlined\"\n          size=\"small\"\n          placeholder={__('ENTER_TEXT', lang)}\n          onChange={(e: any) => handleChange(e.target.value, 'monthly_income')}\n          autoComplete=\"off\"\n          style={{ width: '300px' }}\n        />\n      </div>\n    </form>\n  );\n}\n\nconst getValue = (value: any) => {\n  return (\n    <Typography\n      component=\"span\"\n      color=\"secondary\"\n      style={{\n        fontSize: '22px',\n      }}\n    >\n      <strong>{getNumberFormat(value.toFixed(2))}</strong>\n    </Typography>\n  );\n};\n\nconst getNumberFormat = (value: any) => {\n  return (\n    <NumberFormat\n      value={value}\n      displayType={'text'}\n      thousandSeparator={true}\n      prefix={'रु'}\n    />\n  );\n};\n","import React, { useState, useEffect } from 'react';\n\nimport { makeStyles } from '@mui/styles';\nimport TextField from '@mui/material/TextField';\nimport Typography from '@mui/material/Typography';\nimport Paper from '@mui/material/Paper';\n\nimport NumberFormat from 'react-number-format';\n\nimport Stocks from '../stocks';\nimport config from '../config';\n\nimport __ from '../lang';\n\nconst useStyles = makeStyles({\n  root: {\n    '& > *': {\n      margin: '8px',\n      width: '300px',\n    },\n  },\n});\n\nexport default function MarginLendingForm({ data, lang }: any) {\n  const classes = useStyles();\n\n  const [request, setRequest]: any = useState({\n    stock_name: '',\n    share_count: 0,\n    margin_percent: 0,\n    margin_amount: 0,\n    ma180_price: -1,\n    stocks: [],\n  });\n\n  useEffect(() => {\n    if (data) {\n      setRequest((preRequest: any) => ({\n        ...preRequest,\n        stocks: data['stocks'],\n      }));\n    }\n  }, [data]);\n\n  const _getMarginAmount = (ma180_price: any) => {\n    const { share_count, margin_percent } = request;\n\n    let margin_amount = share_count * ma180_price;\n\n    return (margin_amount * margin_percent) / 100;\n  };\n\n  const _calculate = () => {\n    const { share_count, margin_percent, ma180_price } = request;\n\n    let margin_amount = share_count * ma180_price;\n\n    margin_amount = (margin_amount * margin_percent) / 100;\n\n    setRequest((preRequest: any) => ({\n      ...preRequest,\n      margin_amount,\n    }));\n  };\n\n  const handleChange = (value: any, type: string) => {\n    if (value.trim() == '') value = 0;\n\n    if (value >= 0) {\n      request[type] = parseFloat(value);\n      setRequest(request);\n      _calculate();\n    }\n  };\n\n  const _onAfterSelect = (data: any) => {\n    let stockSymbol = '';\n    if (data && data != null) {\n      stockSymbol = data.symbol;\n    }\n\n    if (stockSymbol) {\n      const { stocks } = request;\n      const selectedStock = stocks.find((s: any) => s.symbol == stockSymbol);\n\n      if (selectedStock) {\n        const avgPrice = parseFloat(selectedStock.ma_180);\n\n        return setRequest((preRequest: any) => ({\n          ...preRequest,\n          ma180_price: avgPrice,\n          margin_amount: _getMarginAmount(avgPrice),\n        }));\n      }\n    }\n\n    setRequest((preRequest: any) => ({\n      ...preRequest,\n      ma180_price: -1,\n      margin_amount: 0,\n    }));\n  };\n\n  const { share_count, ma180_price } = request;\n\n  return (\n    <form className={classes.root} noValidate autoComplete=\"off\">\n      {request.margin_amount > 0 ? (\n        <Paper variant=\"elevation\" style={{ padding: '10px' }}>\n          <Typography variant=\"subtitle1\">\n            {__('MARGIN_AMOUNT', lang)}: {getValue(request.margin_amount)}\n          </Typography>\n        </Paper>\n      ) : (\n        <div />\n      )}\n\n      <div>\n        <Stocks data={data} lang={lang} onAfterSelect={_onAfterSelect} />\n      </div>\n      {ma180_price >= 0 && (\n        <Typography style={{ fontSize: '11px', width: '260px' }}>\n          {__('AVG_MKT_PRICE', lang)}: {getSLabel(ma180_price)}\n        </Typography>\n      )}\n      <div>\n        <TextField\n          id=\"share-no\"\n          label={__('MARGIN_SHARE_COUNT', lang)}\n          variant=\"outlined\"\n          size=\"small\"\n          placeholder={__('ENTER_TEXT', lang)}\n          onChange={(e: any) => handleChange(e.target.value, 'share_count')}\n          value={share_count == 0 ? '' : share_count}\n          autoComplete=\"off\"\n          style={{ width: '300px' }}\n        />\n      </div>\n      <div>\n        <TextField\n          id=\"bonus-dividend\"\n          label={__('MARGIN_PERCENT', lang)}\n          variant=\"outlined\"\n          size=\"small\"\n          onChange={(e: any) => handleChange(e.target.value, 'margin_percent')}\n          autoComplete=\"off\"\n          placeholder={__('ENTER_TEXT', lang)}\n          style={{ width: '300px' }}\n        />\n      </div>\n    </form>\n  );\n}\n\nconst getValue = (value: any) => {\n  return (\n    <Typography\n      component=\"span\"\n      style={{\n        fontSize: '22px',\n        color: value > 0 ? 'rgb(76, 175, 80)' : 'rgb(220, 0, 78)',\n      }}\n    >\n      <strong>{getNumberFormat(value.toFixed(2))}</strong>\n    </Typography>\n  );\n};\n\nconst getSLabel = (value: any) => {\n  return (\n    <Typography\n      component=\"span\"\n      color=\"primary\"\n      style={{\n        fontSize: '12px',\n      }}\n    >\n      <strong>{getNumberFormat(value.toFixed(2))}</strong>\n    </Typography>\n  );\n};\n\nconst getNumberFormat = (value: any) => {\n  return (\n    <NumberFormat\n      value={value}\n      displayType={'text'}\n      thousandSeparator={true}\n      prefix={'रु'}\n    />\n  );\n};\n","import React, { useState, useEffect } from 'react';\nimport { makeStyles } from '@mui/styles';\nimport Typography from '@mui/material/Typography';\nimport Paper from '@mui/material/Paper';\nimport NumberFormat from 'react-number-format';\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableCell from '@mui/material/TableCell';\nimport TableRow from '@mui/material/TableRow';\n\nimport Stocks from '../stocks';\n\nimport __ from '../lang';\n\nconst useStyles = makeStyles({\n  root: {\n    '& > *': {\n      margin: '8px',\n      width: '300px',\n    },\n  },\n  table: {\n    minWidth: 300,\n  },\n});\n\nexport default function CompanyDetail({ data, lang }: any) {\n  const classes = useStyles();\n\n  const [request, setRequest]: any = useState({\n    stock_name: '',\n    stock: null,\n    stocks: [],\n  });\n\n  useEffect(() => {\n    if (data) {\n      setRequest((preRequest: any) => ({\n        ...preRequest,\n        stocks: data['stocks'],\n      }));\n    }\n  }, [data]);\n\n  const _onAfterSelect = (data: any) => {\n    let stockSymbol = '';\n    if (data && data != null) {\n      stockSymbol = data.symbol;\n    }\n\n    if (stockSymbol) {\n      const { stocks } = request;\n      const selectedStock = stocks.find((s: any) => s.symbol == stockSymbol);\n\n      if (selectedStock) {\n        return setRequest((preRequest: any) => ({\n          ...preRequest,\n          stock: selectedStock,\n        }));\n      }\n    }\n\n    setRequest((preRequest: any) => ({\n      ...preRequest,\n      stock: null,\n    }));\n  };\n\n  const { stock } = request;\n\n  return (\n    <form className={classes.root} noValidate autoComplete=\"off\">\n      {stock && (\n        <Paper variant=\"elevation\" style={{ padding: '10px' }}>\n          <Table className={classes.table} aria-label=\"simple table\">\n            <TableBody>\n              <TableRow>\n                <TableCell>{__('NAME', lang)}</TableCell>\n                <TableCell scope=\"row\">{stock.name}</TableCell>\n              </TableRow>\n              <TableRow>\n                <TableCell>{__('SYMBOL', lang)}</TableCell>\n                <TableCell scope=\"row\">{stock.symbol}</TableCell>\n              </TableRow>\n              <TableRow>\n                <TableCell>{__('LTP', lang)}</TableCell>\n                <TableCell scope=\"row\">{getNumberFormat(stock.ltp)}</TableCell>\n              </TableRow>\n              <TableRow>\n                <TableCell>{__('EPS', lang)}</TableCell>\n                <TableCell scope=\"row\">\n                  {getNumberFormat(stock.eps, '')}\n                </TableCell>\n              </TableRow>\n              <TableRow>\n                <TableCell>{__('PE', lang)}</TableCell>\n                <TableCell scope=\"row\">\n                  {getNumberFormat(stock.pe, '')}\n                </TableCell>\n              </TableRow>\n              <TableRow>\n                <TableCell>{__('BOOK_VALUE', lang)}</TableCell>\n                <TableCell scope=\"row\">\n                  {getNumberFormat(stock.book_value)}\n                </TableCell>\n              </TableRow>\n              <TableRow>\n                <TableCell>{__('OUTSTANDING_SHARES', lang)}</TableCell>\n                <TableCell scope=\"row\">\n                  {getNumberFormat(stock.outstanding_shares, '')}\n                </TableCell>\n              </TableRow>\n              <TableRow>\n                <TableCell>{__('MARKET_CAPITALIZATION', lang)}</TableCell>\n                <TableCell scope=\"row\">\n                  {getNumberFormat(stock.market_capitalization)}\n                </TableCell>\n              </TableRow>\n              <TableRow>\n                <TableCell>{__('RSI', lang)}</TableCell>\n                <TableCell scope=\"row\">{stock.rsi}</TableCell>\n              </TableRow>\n              <TableRow>\n                <TableCell>{__('MA', lang)}</TableCell>\n                <TableCell scope=\"row\">\n                  {getNumberFormat(stock.ma_180)}\n                </TableCell>\n              </TableRow>\n\n              {stock['extra'] &&\n                stock['extra'].length > 0 &&\n                stock['extra'].map((r: any, i: number) => {\n                  return (\n                    <TableRow>\n                      <TableCell>{r.label}</TableCell>\n                      <TableCell scope=\"row\">{r.value}</TableCell>\n                    </TableRow>\n                  );\n                })}\n\n              <TableRow>\n                <TableCell>{__('LAST_UPDATED', lang)}</TableCell>\n                <TableCell scope=\"row\">{stock.last_updated}</TableCell>\n              </TableRow>\n            </TableBody>\n          </Table>\n        </Paper>\n      )}\n\n      <div>\n        <Stocks data={data} lang={lang} onAfterSelect={_onAfterSelect} />\n      </div>\n    </form>\n  );\n}\n\nconst getValue = (value: any) => {\n  return (\n    <Typography\n      component=\"span\"\n      style={{\n        fontSize: '22px',\n        color: value > 0 ? 'rgb(76, 175, 80)' : 'rgb(220, 0, 78)',\n      }}\n    >\n      <strong>{getNumberFormat(value.toFixed(2))}</strong>\n    </Typography>\n  );\n};\n\nconst getSLabel = (value: any) => {\n  return (\n    <Typography\n      component=\"span\"\n      color=\"primary\"\n      style={{\n        fontSize: '12px',\n      }}\n    >\n      <strong>{getNumberFormat(value.toFixed(2))}</strong>\n    </Typography>\n  );\n};\n\nconst getNumberFormat = (value: any, prefix = 'रु') => {\n  return (\n    <NumberFormat\n      value={value}\n      displayType={'text'}\n      thousandSeparator={true}\n      prefix={prefix}\n    />\n  );\n};\n","import React, { useState, useEffect } from 'react';\nimport { makeStyles } from '@mui/styles';\nimport MUIDataTable from 'mui-datatables';\nimport { ThemeProvider } from '@mui/styles';\nimport { createTheme } from '@mui/material/styles';\nimport NumberFormat from 'react-number-format';\n\nimport __ from '../lang';\n\ndeclare module '@mui/material/styles' {\n  interface Components {\n    [key: string]: any;\n  }\n}\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: '800px',\n    margin: '0 auto',\n  },\n}));\n\nconst getColumns = (lang: any, extraCols: any) => {\n  const c = [\n    {\n      name: 'symbol_name',\n      label: __('SYMBOL', lang),\n      options: {\n        filter: true,\n        sort: true,\n      },\n    },\n    {\n      name: 'ltp',\n      label: __('LTP', lang),\n      options: {\n        filter: false,\n        sort: true,\n        customBodyRender: (value: any, tableMeta: any, updateValue: any) => {\n          return (\n            <NumberFormat\n              value={value}\n              displayType={'text'}\n              thousandSeparator={true}\n              prefix={''}\n            />\n          );\n        },\n      },\n    },\n    {\n      name: 'book_value',\n      label: __('BOOK_VALUE', lang),\n      options: {\n        filter: false,\n        sort: true,\n        customBodyRender: (value: any, tableMeta: any, updateValue: any) => {\n          return (\n            <NumberFormat\n              value={value}\n              displayType={'text'}\n              thousandSeparator={true}\n              prefix={''}\n            />\n          );\n        },\n      },\n    },\n    {\n      name: 'eps',\n      label: __('EPS', lang),\n      options: {\n        filter: false,\n        sort: true,\n        customBodyRender: (value: any, tableMeta: any, updateValue: any) => {\n          return (\n            <NumberFormat\n              value={value}\n              displayType={'text'}\n              thousandSeparator={true}\n              prefix={''}\n            />\n          );\n        },\n      },\n    },\n    {\n      name: 'pbv',\n      label: __('PBV', lang),\n      options: {\n        filter: false,\n        sort: true,\n        customBodyRender: (value: any, tableMeta: any, updateValue: any) => {\n          return (\n            <NumberFormat\n              value={value}\n              displayType={'text'}\n              thousandSeparator={true}\n              prefix={''}\n            />\n          );\n        },\n      },\n    },\n    {\n      name: 'rsi',\n      label: __('RSI', lang),\n      options: {\n        filter: false,\n        sort: true,\n        customBodyRender: (value: any, tableMeta: any, updateValue: any) => {\n          return (\n            <NumberFormat\n              value={value}\n              displayType={'text'}\n              thousandSeparator={true}\n              prefix={''}\n            />\n          );\n        },\n      },\n    },\n    {\n      name: 'pe',\n      label: __('PE', lang),\n      options: {\n        filter: false,\n        sort: true,\n        customBodyRender: (value: any, tableMeta: any, updateValue: any) => {\n          return (\n            <NumberFormat\n              value={value}\n              displayType={'text'}\n              thousandSeparator={true}\n              prefix={''}\n            />\n          );\n        },\n      },\n    },\n    {\n      name: 'outstanding_shares',\n      label: __('OUTSTANDING_SHARES', lang),\n      options: {\n        filter: false,\n        sort: true,\n        customBodyRender: (value: any, tableMeta: any, updateValue: any) => {\n          return (\n            <NumberFormat\n              value={value}\n              displayType={'text'}\n              thousandSeparator={true}\n              prefix={''}\n            />\n          );\n        },\n      },\n    },\n    {\n      name: 'market_capitalization',\n      label: __('MARKET_CAPITALIZATION', lang),\n      options: {\n        filter: false,\n        sort: true,\n        customBodyRender: (value: any, tableMeta: any, updateValue: any) => {\n          return (\n            <NumberFormat\n              value={value}\n              displayType={'text'}\n              thousandSeparator={true}\n              prefix={''}\n            />\n          );\n        },\n      },\n    },\n    {\n      name: 'ma_180',\n      label: __('MA', lang),\n      options: {\n        filter: false,\n        sort: true,\n        customBodyRender: (value: any, tableMeta: any, updateValue: any) => {\n          return (\n            <NumberFormat\n              value={value}\n              displayType={'text'}\n              thousandSeparator={true}\n              prefix={''}\n            />\n          );\n        },\n      },\n    },\n    {\n      name: 'low_52',\n      label: __('LOW_52', lang),\n      options: {\n        filter: false,\n        sort: true,\n        customBodyRender: (value: any, tableMeta: any, updateValue: any) => {\n          return (\n            <NumberFormat\n              value={value}\n              displayType={'text'}\n              thousandSeparator={true}\n              prefix={''}\n            />\n          );\n        },\n      },\n    },\n    {\n      name: 'high_52',\n      label: __('HIGH_52', lang),\n      options: {\n        filter: false,\n        sort: true,\n        customBodyRender: (value: any, tableMeta: any, updateValue: any) => {\n          return (\n            <NumberFormat\n              value={value}\n              displayType={'text'}\n              thousandSeparator={true}\n              prefix={''}\n            />\n          );\n        },\n      },\n    },\n    {\n      name: 'sector_name',\n      label: __('SECTOR_NAME', lang),\n      options: {\n        filter: true,\n        sort: true,\n      },\n    },\n  ];\n\n  if (extraCols && extraCols.length > 0) {\n    extraCols.map((extraCol: any) => {\n      c.push({\n        name: extraCol.name,\n        label: __(extraCol.label, lang),\n        options: {\n          filter: extraCol.filter,\n          sort: extraCol.sort,\n          customBodyRender: (value: any, tableMeta: any, updateValue: any) => {\n            return (\n              <NumberFormat\n                value={value}\n                displayType={'text'}\n                thousandSeparator={true}\n                prefix={''}\n              />\n            );\n          },\n        },\n      });\n    });\n  }\n\n  return c;\n};\n\nexport default function StockList({ data, lang }: any) {\n  const classes = useStyles();\n\n  const [stocks, setStocks]: any = useState([]);\n  const [extraCols, setExtraCols]: any = useState([]);\n  const [columns, setColumns]: any = useState(getColumns(lang, extraCols));\n\n  useEffect(() => {\n    setStocks(data.stocks);\n    setExtraCols(data.extraCols);\n  }, [data]);\n\n  useEffect(() => {\n    setColumns(getColumns(lang, extraCols));\n  }, [lang, extraCols]);\n\n  const options: any = {\n    rowsPerPageOptions: [10, 50, 100],\n    download: false,\n    print: false,\n    responsive: 'standard',\n    filter: true,\n    filterType: 'checkbox',\n    selectableRows: 'none',\n    draggableColumns: {\n      enabled: true,\n    },\n    textLabels: {\n      body: {\n        noMatch: __('TABLE_BODY_NOMATCH', lang),\n        toolTip: __('TABLE_BODY_TOOLTIP', lang),\n        columnHeaderTooltip: (column: any) =>\n          `${__('TABLE_BODY_SORT_FOR', lang)} ${column.label}`,\n      },\n      pagination: {\n        next: __('TABLE_PAGINATION_NEXT', lang),\n        previous: __('TABLE_PAGINATION_PREV', lang),\n        rowsPerPage: __('TABLE_PAGINATION_PER_PAGE', lang),\n        displayRows: __('TABLE_PAGINATION_OF', lang),\n      },\n      toolbar: {\n        search: __('TABLE_TOOLBAR_SEARCH', lang),\n        downloadCsv: __('TABLE_TOOLBAR_DOWNLOAD_CV', lang),\n        print: __('TABLE_TOOLBAR_PRINT', lang),\n        viewColumns: __('TABLE_TOOLBAR_VIEW_COLUMNS', lang),\n        filterTable: __('TABLE_TOOLBAR_FILTER_TABLE', lang),\n      },\n      filter: {\n        all: __('TABLE_FILTER_ALL', lang),\n        title: __('TABLE_FILTER_TITLE', lang),\n        reset: __('TABLE_FILTER_RESET', lang),\n      },\n      viewColumns: {\n        title: __('TABLE_VIEW_COLUMNS', lang),\n        titleAria: __('TABLE_VIEW_SH_TITLE', lang),\n      },\n      selectedRows: {\n        text: __('TABLE_SELECTED_ROWS_TEXT', lang),\n        delete: __('TABLE_SELECTED_ROWS_DELETE', lang),\n        deleteAria: __('TABLE_SELECTED_ROWS_DELETE_ARIA', lang),\n      },\n    },\n  };\n\n  if (!stocks.length) return <div />;\n\n  function getMuiTheme() {\n    return createTheme({\n      components: {\n        MUIDataTableBodyCell: {\n          styleOverrides: {\n            root: {\n              fontSize: '12px',\n            },\n          },\n        },\n        MUIDataTableHeadCell: {\n          styleOverrides: {\n            dragCursor: {\n              fontSize: '11px',\n            },\n          },\n        },\n      },\n    });\n  }\n\n  return (\n    <div className={classes.root}>\n      <ThemeProvider theme={getMuiTheme()}>\n        <MUIDataTable\n          title={\n            lang == 'en'\n              ? `NEPSE Stocks [Last Updated: ${stocks[0]['last_updated']}]`\n              : `नेप्से स्टकहरू [पछिल्लो अपडेट: ${stocks[0]['last_updated']}]`\n          }\n          data={stocks}\n          columns={columns}\n          options={options}\n        />\n      </ThemeProvider>\n    </div>\n  );\n}\n","import React from 'react';\nimport Switch from '@mui/material/Switch';\nimport FormGroup from '@mui/material/FormGroup';\nimport FormControlLabel from '@mui/material/FormControlLabel';\n\nexport default function SwitchesSize({ onSwitchLang }: any) {\n  const [checked, setChecked] = React.useState(false);\n\n  const toggleChecked = () => {\n    setChecked((prev) => !prev);\n    onSwitchLang(!checked);\n  };\n\n  return (\n    <FormGroup>\n      <FormControlLabel\n        control={\n          <Switch\n            color=\"primary\"\n            size=\"small\"\n            checked={checked}\n            onChange={toggleChecked}\n          />\n        }\n        label=\"नेपाली\"\n      />\n    </FormGroup>\n  );\n}\n","import config from './config';\n\nexport const fetchApi = (endpoint: any, data: any, onAfterFetch: any) => {\n  const formData = new FormData();\n  for (let i in data) {\n    if (data[i]) {\n      formData.append(i, data[i]);\n    }\n  }\n  fetch(endpoint, {\n    method: 'POST',\n    headers: {\n      Authorization: `Bearer ${config.token}`,\n    },\n    body: formData,\n  })\n    .then((res) => res.json())\n    .then(\n      (result) => {\n        onAfterFetch(result);\n      },\n      // Note: it's important to handle errors here\n      // instead of a catch() block so that we don't swallow\n      // exceptions from actual bugs in components.\n      (error) => {\n        onAfterFetch({ error: true });\n      }\n    );\n};\n","import React, { useState, useEffect } from 'react';\n\nimport { makeStyles } from '@mui/styles';\n\nimport InputLabel from '@mui/material/InputLabel';\nimport FormControl from '@mui/material/FormControl';\nimport NativeSelect from '@mui/material/NativeSelect';\nimport Link from '@mui/material/Link';\n\nimport BonusForm from './form/BonusForm';\nimport PLForm from './form/PLForm';\nimport BonusPriceAdjustment from './form/BonusPriceAdjustment';\nimport RightSharePriceAdjustment from './form/RightSharePriceAdjustment';\nimport GForm from './form/GForm';\nimport EMIForm from './form/EMI';\nimport IncomeForm from './form/IncomeTax';\nimport MarginLending from './form/MarginLending';\nimport CompanyDetail from './form/CompanyDetail';\nimport StockList from './form/StockList';\n\nimport LangSwiter from './LangSwitcher';\nimport { fetchApi } from './Network';\n\nimport __ from './lang';\nimport config from './config';\n\nconst options = [\n  { name: 'INDIVIDUAL_SHARE_CALCULATOR', value: 1 },\n  { name: 'EQUITY_BONUS_SHARE_CALCULATOR', value: 2 },\n  { name: 'BONUS_SHARE_PRICE_ADJUSTMENT_CALCULATOR', value: 3 },\n  { name: 'RIGHT_SHARE_PRICE_ADJUSTMENT_CALCULATOR', value: 4 },\n  { name: 'GRAHAM_CALCULATOR', value: 5 },\n  { name: 'EMI_CALCULATOR', value: 6 },\n  { name: 'INCOME_TAX', value: 7 },\n  { name: 'MARGIN_LENDING', value: 8 },\n  { name: 'COMPANY_DETAILS', value: 9 },\n  { name: 'STOCK_LIST', value: 10 },\n];\n\nconst useStyles = makeStyles({\n  root: {\n    marginLeft: '8px',\n  },\n});\n\nfunction App() {\n  const classes = useStyles();\n  const [option, setOption] = useState(0);\n  const [np, setNp] = useState(false);\n  const [data, setData] = useState(null);\n  const [visibleOptions, setVisibleOption] = useState([1, 2, 3, 4, 5, 6, 7, 8]);\n\n  useEffect(() => {\n    fetchApi(config.api_url, { ref: 'web' }, (resp: any) => {\n      if (resp && !resp.error) {\n        setData(resp);\n        if (resp.visible_options) {\n          const a = resp.visible_options;\n          setVisibleOption(a);\n        }\n      }\n    });\n  }, []);\n\n  const handleChange = (event: any) => {\n    setOption(parseInt(event.target.value));\n  };\n\n  const _onSwitchLang = (lang: boolean) => {\n    setNp(lang);\n  };\n\n  const lang = np ? 'np' : 'en';\n\n  return (\n    <div>\n      <div\n        style={{\n          display: 'flex',\n          alignItems: 'center',\n          justifyContent: 'center',\n          flexDirection: 'column',\n        }}\n      >\n        <div style={{ marginTop: '20px', padding: '10px' }}>\n          <div\n            style={{\n              display: 'flex',\n              justifyContent: 'flex-end',\n              alignItems: 'center',\n            }}\n          >\n            <LangSwiter onSwitchLang={_onSwitchLang} />\n          </div>\n          <FormControl className={classes.root}>\n            <InputLabel\n              style={{ marginTop: '0px', marginLeft: '-15px' }}\n              htmlFor=\"share-calculator\"\n            >\n              {__('SELECT_SHARE_CALCUALTOR', lang)}\n            </InputLabel>\n            <NativeSelect\n              id=\"share-calculator\"\n              style={{ width: '300px', fontSize: '13px' }}\n              value={option}\n              onChange={handleChange}\n            >\n              <option aria-label=\"none\" value=\"\" />\n\n              {options.map((o, i) =>\n                visibleOptions.includes(o.value) ? (\n                  <option key={i} value={o.value}>\n                    {__(o.name, lang)}\n                  </option>\n                ) : null\n              )}\n            </NativeSelect>\n          </FormControl>\n        </div>\n        <div\n          style={{\n            marginTop: '20px',\n            padding: '10px',\n          }}\n        >\n          {option === 2 && visibleOptions.includes(2) && (\n            <BonusForm data={data} lang={lang} />\n          )}\n          {option === 1 && visibleOptions.includes(1) && (\n            <PLForm data={data} lang={lang} />\n          )}\n          {option === 3 && visibleOptions.includes(3) && (\n            <BonusPriceAdjustment data={data} lang={lang} />\n          )}\n          {option === 4 && visibleOptions.includes(4) && (\n            <RightSharePriceAdjustment data={data} lang={lang} />\n          )}\n          {option === 5 && visibleOptions.includes(5) && (\n            <GForm data={data} lang={lang} />\n          )}\n          {option === 6 && visibleOptions.includes(6) && (\n            <EMIForm data={data} lang={lang} />\n          )}\n          {option === 7 && visibleOptions.includes(7) && (\n            <IncomeForm data={data} lang={lang} />\n          )}\n          {option === 8 && visibleOptions.includes(8) && (\n            <MarginLending data={data} lang={lang} />\n          )}\n          {option === 9 && visibleOptions.includes(9) && (\n            <CompanyDetail data={data} lang={lang} />\n          )}\n          {option === 10 && visibleOptions.includes(10) && (\n            <StockList data={data} lang={lang} />\n          )}\n        </div>\n      </div>\n      <div\n        style={{\n          position: 'fixed',\n          right: 1,\n          bottom: 1,\n          fontSize: '9px',\n        }}\n      >\n        Developed by{' '}\n        <Link\n          rel=\"noopener\"\n          style={{ color: '#000000' }}\n          title=\"Dinesh Maharjan - Full Stack Engineer\"\n          target=\"_blank\"\n          href=\"https://dineshmaharjan.com.np\"\n          underline=\"none\"\n        >\n          @httpdeveloper\n        </Link>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App'\nimport './index.css';\n\n// import reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n   <App />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals(console.log);\n"],"sourceRoot":""}